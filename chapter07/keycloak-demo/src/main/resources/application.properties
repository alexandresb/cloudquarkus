# Configuration file
# key = value

# racine del'URL du fournisseur d'identité Keycloak
keycloak.url=http://localhost:8180
#config de la sécurité JWT
# emplacement dans le fournisseur ou la clé est stockée
mp.jwt.verify.publickey.location=${keycloak.url}/auth/realms/quarkus-realm/protocol/openid-connect/certs
#indication que le créateur du jeton est le realm quarkus-realm Keycloak
mp.jwt.verify.issuer=${keycloak.url}/auth/realms/quarkus-realm
#indication du nom de realm
quarkus.smallrye-jwt.realmName=quarkus-realm

#config de la sécurité  de l'application via le serveur d'indentité Keycloak
#cf. https://quarkus.io/guides/security-openid-connect & https://quarkus.io/guides/security-keycloak-authorization
# pour la séquence / le flux d'une authentification OIDC : https://www.keycloak.org/docs/latest/server_admin/#_oidc-auth-flows
# active la sécurité via OpenID Connect (l'extension Quarkus doit être présente)
#quarkus.oidc.enabled=true
#URL du servuer OIDC - URL du endpoint permettant l'authentification
quarkus.oidc.auth-server-url=${keycloak.url}/auth/realms/quarkus-realm
#id du client défini dans le realm quarkus-realm
#quarkus.oidc.client-id=customer-service
#secret pour que l'application cliente puisse s'enregister auprès du serveur Keycloak - Donc obtenir un token
#doit matcher avec le secret indiqué dans la définition du client dans le realm quarkus-realm
#quarkus.oidc.credentials.secret=mysecret
#activatation de la capacité CORS
#quarkus.http.cors=true

# Enable Policy Enforcement
#quarkus.keycloak.policy-enforcer.enable=true

# config JDBC
# les var d'env serviront dans l'env cloud
quarkus.datasource.url=jdbc:postgresql://${POSTGRESQL_SERVICE_HOST:localhost}:${POSTGRESQL_SERVICE_PORT:5432}/quarkusdb
quarkus.datasource.driver=org.postgresql.Driver
quarkus.datasource.username=quarkus
quarkus.datasource.password=quarkus
# config Hibernate pour activer le mode Drop & Create
quarkus.hibernate-orm.database.generation=drop-and-create
#Config Agroal pour spécifier la taille du pool
quarkus.datasource.initial-size=1
quarkus.datasource.min-size=2
quarkus.datasource.max-size=8
# script d'insertion de données après la création des tables
quarkus.hibernate-orm.sql-load-script=import.sql
# log des instructions SQL
quarkus.hibernate-orm.log.sql=true
